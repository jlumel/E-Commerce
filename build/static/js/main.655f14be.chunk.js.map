{"version":3,"sources":["components/Item.js","components/ItemList.js","components/ItemListContainer.js","components/Home.js","context/cartContext.js","components/CartWidget.js","components/NavBar.js","components/Cart.js","components/ItemCount.js","components/ItemDetail.js","components/ItemDetailContainer.js","App.js","serviceWorker.js","index.js"],"names":["Item","item","className","nombre","src","img","alt","to","id","style","textAlign","precio","ItemList","items","map","key","ItemListContainer","title","useState","setItems","useEffect","Promise","res","products","then","Home","greeting","hora","Date","getHours","CartContext","React","createContext","useCartContext","useContext","CartProvider","children","defaultCart","cart","setCart","totalQuantity","setTotalQuantity","agregado","setAgregado","Provider","value","add","quantity","stock","find","product","forEach","remove","filter","producto","clear","CartWidget","width","length","xmlns","viewBox","height","fill","d","NavBar","activeClassName","Cart","total","setTotal","name","onClick","suma","getTotal","ItemCount","onAdd","initial","count","setCount","disabled","ItemDetail","ItemDetailContainer","setItem","useParams","Number","getItem","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.655f14be.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Item.css'\r\n\r\n\r\n\r\nconst Item = ({ item }) => {\r\n\r\n    return (\r\n        <div className={'itemCard'}>\r\n\r\n            <h2>{item.nombre}</h2>\r\n            <div className={'itemImg'}><img src={item.img} alt={item.nombre}/></div>\r\n            <Link to={`/item/${item.id}`} style={{textAlign: 'center'}}><button className={'verMas'}>Ver +</button></Link>\r\n            <p>${item.precio}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item","import React from 'react'\r\nimport Item from './Item'\r\nimport './ItemList.css'\r\n\r\nconst ItemList = ({ items }) => {\r\n\r\n    return (\r\n        <div className={'itemList'}>\r\n            {items.map(item => <Item item={item} key={item.id} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemList","import React, { useState, useEffect } from 'react'\r\nimport ItemList from './ItemList'\r\nimport products from '../productos.json'\r\n\r\n\r\nconst ItemListContainer = ({ title }) => {\r\n\r\n    const [items, setItems] = useState(null)\r\n\r\n    const getItems = () => new Promise(res => {\r\n     \r\n            res(products)\r\n   \r\n    })\r\n\r\n    useEffect(() => {\r\n        getItems().then(res => {\r\n            setItems(res)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <h2 className={'title'}>{title}</h2>\r\n            {items && <ItemList items={items} />}\r\n            \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ItemListContainer","import React from 'react';\r\nimport ItemListContainer from './ItemListContainer'\r\n\r\nconst Home = () => {\r\n\r\n    const hora = new Date()\r\n\r\n    let greeting\r\n\r\n    if (hora.getHours() > 6 && hora.getHours() < 12) {\r\n        greeting = 'Buen dia'\r\n    } else if (hora.getHours() > 12 && hora.getHours() < 20) {\r\n        greeting = 'Buenas tardes'\r\n    } else {\r\n        greeting = 'Buenas noches'\r\n    }\r\n\r\n    const title = `${greeting}. Bienvenidxs a nuestra tienda virtual!`\r\n    return (\r\n        <main>\r\n            <ItemListContainer title={title} />\r\n        </main>\r\n\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useContext, useState } from 'react'\r\n\r\nexport const CartContext = React.createContext([])\r\n\r\nexport const useCartContext = () => useContext(CartContext)\r\n\r\nconst CartProvider = ({ children, defaultCart }) => {\r\n\r\n    const [cart, setCart] = useState(defaultCart)\r\n\r\n    const [totalQuantity, setTotalQuantity] = useState(0)\r\n\r\n    const [agregado, setAgregado] = useState(false)\r\n\r\n    const add = (item, quantity) => {\r\n\r\n        if (item.stock > 0 && !cart.find(product => product.item.nombre === item.nombre)) {\r\n            setCart([...cart, { item, quantity }])\r\n            setTotalQuantity(totalQuantity + quantity)\r\n            setAgregado(true)\r\n        } else if (item.stock > 0) {\r\n            cart.forEach(product => {\r\n                if (product.item.nombre === item.nombre) {\r\n                    product.quantity += quantity\r\n                }\r\n            })\r\n            setCart(cart)\r\n            setTotalQuantity(totalQuantity + quantity)\r\n            setAgregado(true)\r\n        }\r\n    }\r\n\r\n    const remove = id => {\r\n        setCart(cart.filter(producto => producto.item.id !== id))\r\n        setTotalQuantity(totalQuantity - cart.find(producto=> producto.item.id === id).quantity)\r\n    }\r\n\r\n    const clear = () => {\r\n        setCart([])\r\n        setTotalQuantity(0)\r\n    }\r\n\r\n    return <CartContext.Provider value={{ cart, totalQuantity, agregado, setAgregado, add, remove, clear }}>\r\n\r\n        {children}\r\n\r\n    </CartContext.Provider>\r\n}\r\n\r\nexport default CartProvider","import React from 'react'\r\nimport './CartWidget.css'\r\nimport {useCartContext} from '../context/cartContext'\r\n\r\nconst CartWidget = ()=> {\r\n\r\nconst {cart, totalQuantity} = useCartContext()\r\n\r\n    return(\r\n    <div style={{width: '11vw'}}>\r\n\r\n    <span className={cart.length ? 'active': ''}>{totalQuantity}</span>\r\n        <svg className={cart.length ? 'active': ''} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"4vw\" height=\"2vw\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path d=\"M4 6.414L.757 3.172l1.415-1.415L5.414 5h15.242a1 1 0 0 1 .958 1.287l-2.4 8a1 1 0 0 1-.958.713H6v2h11v2H5a1 1 0 0 1-1-1V6.414zM6 7v6h11.512l1.8-6H6zm-.5 16a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm12 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\" fill=\"rgba(255,255,255,1)\"/></svg>\r\n        \r\n    </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default CartWidget","import React from 'react';\r\nimport './NavBar.css'\r\nimport CartWidget from './CartWidget'\r\nimport {Link, NavLink} from 'react-router-dom'\r\n\r\nconst NavBar = () => {\r\n\r\n    return (\r\n        <nav>\r\n            <Link className={'nombre'} to=\"/\"><h1>Tienda Natural</h1></Link>\r\n            <div className=\"menu\">\r\n                <NavLink activeClassName=\"active\" to=\"/harinasyfideos\" className={'categories'}>Harinas y Fideos</NavLink>\r\n                <NavLink activeClassName=\"active\" to=\"/papasypure\" className={'categories'}>Papas y Puré deshidratado</NavLink>\r\n                <NavLink activeClassName=\"active\" to=\"/conservas\" className={'categories'}>Conservas</NavLink>\r\n                <NavLink activeClassName=\"active\" to=\"/dulcesymermeladas\" className={'categories'}>Dulces y Mermeladas</NavLink>\r\n                <NavLink activeClassName=\"active\" to=\"/cervezasartesanales\" className={'categories'}>Cervezas Artesanales</NavLink>\r\n                <NavLink activeClassName=\"active\" to=\"/vinos\" className={'categories'}>Vinos</NavLink>\r\n            </div>\r\n            <Link to=\"/cart\">\r\n            <CartWidget />\r\n            </Link>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useCartContext } from '../context/cartContext'\r\nimport './Cart.css'\r\n\r\nconst Cart = () => {\r\n\r\n    const { remove, clear, cart } = useCartContext()\r\n\r\n    const [total, setTotal] = useState(0)\r\n\r\n    const getTotal = () => {\r\n        let suma = 0\r\n        cart.forEach(producto => {\r\n            suma += producto.quantity * producto.item.precio\r\n            setTotal(suma)\r\n        });\r\n    }\r\n\r\n    const items = cart.length ? cart.map(producto => \r\n    <>\r\n    <li className={'itemCart'} key={producto.item.id}>\r\n        <img src={producto.item.img} alt={producto.item.name}></img>\r\n        <p id={'itemNombre'}>{`${producto.item.nombre}`}</p>\r\n        <p id={'itemCantidad'}>{`Cantidad: ${producto.quantity}`}</p>\r\n        <p>{`Subtotal: $${producto.quantity * producto.item.precio}`}</p>\r\n    <button className={'btnEliminar'} onClick={() => remove(producto.item.id)}>Eliminar</button>\r\n    </li>\r\n    </>) \r\n    : null\r\n\r\n    useEffect(() => {\r\n        getTotal()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <h2 className={'title'}>Tu Carrito</h2>\r\n            {items &&\r\n                <div className={'carritoContainer'}>\r\n\r\n                    <ul className={'listCarrito'}>\r\n                        {items}\r\n                    </ul>\r\n                    <p className={'cartTotal'}>Total: ${total}</p>\r\n                    <button className={'btnComprar'}>Finalizar Compra</button>\r\n                    <Link style={{ textAlign: 'center' }} to=\"/\"><button className={'seguirCompra'}>Seguir comprando</button></Link>\r\n                    <button onClick={() => clear()} className={'vaciarCarrito'}>Vaciar Carrito</button>\r\n                </div>\r\n            }\r\n            {!items &&\r\n                <div className={'carritoContainer'}>\r\n                    <div className={'listCarrito'}>\r\n                        <p className={'carritoVacio'}>No hay productos</p>\r\n                        <Link to=\"/\"><button className={'backToList'}>Volver al listado de productos</button></Link>\r\n                    </div>\r\n                </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart","import React, { useState } from 'react';\r\nimport './ItemCount.css'\r\n\r\nconst ItemCount = ({ onAdd, stock, initial, item}) => {\r\n\r\n    const [count, setCount] = useState(initial)\r\n\r\n    const sumar = () => {\r\n        if (count < stock) {\r\n\r\n            setCount(count + 1)\r\n        }\r\n    }\r\n\r\n    const restar = () => {\r\n        if (count > 1) {\r\n\r\n            setCount(count - 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'addContainer'}>\r\n            <div className={'counterContainer'}>\r\n                <button className={'counterbtn'} onClick={restar}> - </button>\r\n                <p>{count}</p>\r\n                <button className={'counterbtn'} onClick={sumar}> + </button>\r\n            </div>\r\n            <button className={'addbtn'} disabled={stock < 1} onClick={() => onAdd(item,count)} >{stock > 0 ? 'Agregar' : 'Sin stock'} </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemCount","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport ItemCount from './ItemCount'\r\nimport { useCartContext } from '../context/cartContext'\r\nimport './ItemDetail.css'\r\nimport { useEffect } from 'react'\r\n\r\nconst ItemDetail = ({ item }) => {\r\n\r\n\r\n    const { add, agregado, setAgregado } = useCartContext()\r\n\r\n    useEffect(()=>{\r\n        setAgregado(false)\r\n    },[setAgregado])\r\n\r\n    return (\r\n        <div className={'detailContainer'}>\r\n            <div className={'detailText'}>\r\n                <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Explicabo exercitationem consectetur natus assumenda sunt repellendus mollitia, quidem minus ad, corrupti ipsa ipsum vel suscipit aliquam beatae dolores rerum, molestias cupiditate?</p>\r\n            </div>\r\n            <div className={'itemDetailCard'}>\r\n\r\n                <h2>{item.nombre}</h2>\r\n                <div className={'itemDetailImg'}><img src={item.img} alt=\"\" /></div>\r\n                <p className={'detailPrecio'}>${item.precio}</p>\r\n                {!agregado && <ItemCount item={item} onAdd={add} initial={item.stock ? 1 : 0} stock={item.stock} />}\r\n                {agregado && <><Link style={{ textAlign: 'center' }} to=\"/cart\"><button className={'finCompra'}>Terminá tu compra</button></Link>\r\n                <Link style={{ textAlign: 'center' }} to=\"/\"><button className={'seguirCompra'}>Seguir comprando</button></Link>\r\n                </>\r\n                \r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemDetail","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport ItemDetail from './ItemDetail'\r\nimport items from '../productos.json'\r\n\r\nconst ItemDetailContainer = () => {\r\n\r\n    const [item, setItem] = useState(null)\r\n\r\n    const { id } = useParams()\r\n\r\n    const getItem = (id) => new Promise(res => {\r\n       \r\n            res(items.find(item => item.id === Number(id)))\r\n        \r\n    })\r\n    \r\n    useEffect(() => {\r\n        getItem(id).then(res => {\r\n            setItem(res)\r\n        }\r\n        )\r\n    }, [id])\r\n\r\n    return (\r\n        <>\r\n            {item && <ItemDetail item={item} />}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ItemDetailContainer","import React from 'react';\nimport './App.css'\nimport Home from './components/Home';\nimport NavBar from './components/NavBar'\nimport Cart from './components/Cart'\nimport CartProvider from './context/cartContext'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport ItemDetailContainer from './components/ItemDetailContainer';\n\nfunction App() {\n  return (\n    <CartProvider defaultCart={[]}>\n    <BrowserRouter>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/item/:id\">\n          <ItemDetailContainer />\n        </Route>\n        <Route exact path=\"/cart\">\n          <Cart />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n    </CartProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}